{{- if .Values.ingress.enabled -}}
{{- $fullName := include "daps-reg-service.fullname" . -}}
{{- $ingressExtraPaths := .Values.ingress.extraPaths -}}
{{- $svcName := include "daps-reg-service.fullname" . -}}
{{- $svcPort := .Values.service.port -}}
{{- if semverCompare ">=1.20-0" .Capabilities.KubeVersion.GitVersion -}}
apiVersion: networking.k8s.io/v1
{{- else if semverCompare ">=1.14-0" .Capabilities.KubeVersion.GitVersion -}}
apiVersion: networking.k8s.io/v1beta1
{{- else -}}
apiVersion: extensions/v1beta1
{{- end }}
kind: Ingress
metadata:
  name: {{ $fullName }}
  labels:
    {{- include "daps-reg-service.labels" . | nindent 4 }}
  annotations:
    # nginx.ingress.kubernetes.io/rewrite-target: /$2
    nginx.ingress.kubernetes.io/use-regex: "true"
    {{- if .Values.ingress.tls.certMgr.enabled }}
    cert-manager.io/cluster-issuer: {{ .Values.ingress.tls.certMgr.issuer }}
    {{- end }}
spec:
  {{- if .Values.ingress.tls.enabled }}
  tls:
    - hosts:
        - {{ .Values.ingress.host }}
      secretName: "{{ include "daps-reg-service.fullname" . }}-tls"
  {{- end }}
  ingressClassName: {{ .Values.ingress.className }}
  rules:
  - host: {{ .Values.ingress.host }}
    http:
      paths:
      - path: {{ default "/" .Values.ingress.pathPrefix | quote }}
        pathType: Prefix
        backend:
          {{- if semverCompare ">=1.20-0" .Capabilities.KubeVersion.GitVersion }}
          service:            
            name: {{ $svcName }}
            port:
              number: {{ $svcPort }}
          {{- else }}
          {{- if $.Values.service.servicename }}
            serviceName: {{ $.Values.service.servicename }}
          {{- else }}
            serviceName: {{ default $svcName .service }}
          {{- end }}
            servicePort: {{ default $svcPort .port }}
          {{- end }}
{{- end }}
